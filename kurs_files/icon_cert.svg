<svg xmlns="http://www.w3.org/2000/svg" width="17.861" height="22.415" viewBox="0 0 17.861 22.415">
  <g id="Group_2541" data-name="Group 2541" transform="translate(-349.827 -1732.673)">
    <path id="Path_2355" data-name="Path 2355" d="M17.768,322.515V318.3L14,314.231H2.232v17.938H9.151" transform="translate(348.595 1419.441)" fill="none" stroke="#007d40" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"/>
    <path id="Path_2363" data-name="Path 2363" d="M18.093,325.731a4.749,4.749,0,1,1-4.749-4.749A4.749,4.749,0,0,1,18.093,325.731Z" transform="translate(348.595 1419.441)" fill="none" stroke="#007d40" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"/>
    <path id="Path_2364" data-name="Path 2364" d="M9.98,330.48l-1.088,4.166H12.2l.768-2.938" transform="translate(348.595 1419.441)" fill="none" stroke="#007d40" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"/>
    <path id="Path_2365" data-name="Path 2365" d="M16.792,330.48l1.088,4.166H14.568l-.768-2.938" transform="translate(348.595 1419.441)" fill="none" stroke="#007d40" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"/>
  </g>
<!-- Code injected by live-server -->
<script>
	// <![CDATA[  <-- For SVG support
	if ('WebSocket' in window) {
		(function () {
			function refreshCSS() {
				var sheets = [].slice.call(document.getElementsByTagName("link"));
				var head = document.getElementsByTagName("head")[0];
				for (var i = 0; i < sheets.length; ++i) {
					var elem = sheets[i];
					var parent = elem.parentElement || head;
					parent.removeChild(elem);
					var rel = elem.rel;
					if (elem.href && typeof rel != "string" || rel.length == 0 || rel.toLowerCase() == "stylesheet") {
						var url = elem.href.replace(/(&|\?)_cacheOverride=\d+/, '');
						elem.href = url + (url.indexOf('?') >= 0 ? '&' : '?') + '_cacheOverride=' + (new Date().valueOf());
					}
					parent.appendChild(elem);
				}
			}
			var protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://';
			var address = protocol + window.location.host + window.location.pathname + '/ws';
			var socket = new WebSocket(address);
			socket.onmessage = function (msg) {
				if (msg.data == 'reload') window.location.reload();
				else if (msg.data == 'refreshcss') refreshCSS();
			};
			if (sessionStorage && !sessionStorage.getItem('IsThisFirstTime_Log_From_LiveServer')) {
				console.log('Live reload enabled.');
				sessionStorage.setItem('IsThisFirstTime_Log_From_LiveServer', true);
			}
		})();
	}
	else {
		console.error('Upgrade your browser. This Browser is NOT supported WebSocket for Live-Reloading.');
	}
	// ]]>
</script>
<!-- Code injected by live-server -->
<script>
	// <![CDATA[  <-- For SVG support
	if ('WebSocket' in window) {
		(function () {
			function refreshCSS() {
				var sheets = [].slice.call(document.getElementsByTagName("link"));
				var head = document.getElementsByTagName("head")[0];
				for (var i = 0; i < sheets.length; ++i) {
					var elem = sheets[i];
					var parent = elem.parentElement || head;
					parent.removeChild(elem);
					var rel = elem.rel;
					if (elem.href && typeof rel != "string" || rel.length == 0 || rel.toLowerCase() == "stylesheet") {
						var url = elem.href.replace(/(&|\?)_cacheOverride=\d+/, '');
						elem.href = url + (url.indexOf('?') >= 0 ? '&' : '?') + '_cacheOverride=' + (new Date().valueOf());
					}
					parent.appendChild(elem);
				}
			}
			var protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://';
			var address = protocol + window.location.host + window.location.pathname + '/ws';
			var socket = new WebSocket(address);
			socket.onmessage = function (msg) {
				if (msg.data == 'reload') window.location.reload();
				else if (msg.data == 'refreshcss') refreshCSS();
			};
			if (sessionStorage && !sessionStorage.getItem('IsThisFirstTime_Log_From_LiveServer')) {
				console.log('Live reload enabled.');
				sessionStorage.setItem('IsThisFirstTime_Log_From_LiveServer', true);
			}
		})();
	}
	else {
		console.error('Upgrade your browser. This Browser is NOT supported WebSocket for Live-Reloading.');
	}
	// ]]>
</script>
</svg>
